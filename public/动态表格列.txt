 <div class="table table-container">
      <el-table
        v-loading="loading"
        :data="tableData"
        style="width: 100%"
        border
      >
        <!-- <el-table-column
          label="模型名称"
          prop="name"
          align="center"
        ></el-table-column> -->
        <el-table-column
          v-for="(item, index) in tableHead"
          :key="index"
          :label="item.label"
          align="center"
        >
          <template slot-scope="scope">
            <span>{{ scope.row[item.property] }}</span>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <div class="footer">
      <el-pagination
        :current-page="pageNum"
        :page-size="pageSize"
        :page-sizes="[10, 20, 30, 40]"
        layout=" prev, pager, next, jumper,total, sizes"
        :total="totalPages"
      >
      </el-pagination>
    </div>


====================
tableHead: [
        { label: "姓名", property: "name" },
        { label: "城市", property: "city" },
        { label: "手机号", property: "phone" },
        { label: "邮箱", property: "email" },
        { label: "产品名称", property: "sourceName" },
        { label: "月估调用量", property: "count" },
        { label: "留言内容", property: "content" },
        { label: "申请时间", property: "createTime" }
      ],


tableData: [],
      pageNum: 1,
      pageSize: 10,
      totalPages: 1,
      loading: false





element UI实现动态生成多级表头

https://www.cnblogs.com/llcdxh/p/9473458.html
TableColumn.vue主要是使用递归来对表头进行循环生成

<template>
  <el-table-column :label="coloumnHeader.label" :prop="coloumnHeader.label" align="center">
    <template v-for="item in coloumnHeader.children">
      <tableColumn v-if="item.children && item.children.length" :key="item.id" :coloumn-header="item"></tableColumn>
      <el-table-column v-else :key="item.name" :label="item.label" :prop="item.prop" align="center"></el-table-column>
    </template>
  </el-table-column>
</template>

<script>
export default {
  name: 'tableColumn',
  props: {
    coloumnHeader: {
      type: Object,
      required: true
    }
  }
}
</script>

<style scoped>

</style>


使用==============
<template>
  <el-table :data="tableData" border :height="height">
    <template v-for="item in tableHeader">
      <table-column v-if="item.children && item.children.length" :key="item.id" :coloumn-header="item"></table-column>
      <el-table-column v-else :key="item.id" :label="item.label" :prop="item.prop" align="center"></el-table-column>
    </template>
  </el-table>
</template>